@using ASI.Basecode.Services.ServiceModels

@{
    ViewData["Title"] = "Reports";
    var barChartData = ViewData["BarChartData"] as List<int>;
    var lineChartData = ViewData["LineChartData"] as List<int>;
    var userBookingFrequencies = ViewData["UserBookingFrequencies"] as List<UserBookingFrequency>;
    var roomUsageSummaries = ViewData["RoomUsageSummaries"] as List<RoomUsageSummary>;
}
@section styles {
    <link rel="stylesheet" href="~/css/reportsAndAnalytics.css" />
}

<div class="dashboard-header">
    <h1>Reports & Analytics</h1>
</div>
<div class="reports-container">
    <div class="first-header">
        <h1>Booking Summary</h1>
    </div>
    <div class="container-first">
        <div class="graph-header">
            <div>
                <h2>Room Booking Overview</h2>
            </div>
        </div>
        <div class="graphs">
            <canvas id="barChart"></canvas>
        </div>
    </div>
    <div class="container-first">
        <div class="graph-header">
            <div class="graph-header" style="display: flex; justify-content: space-between; align-items: center;">
                <h2>Daily Booking Trends</h2>
                <div class="dropdown-container" style="width: 200px;">
                    <select id="monthSelector" onchange="updateLineChart()" style="width: 100%;">
                        <option value="1">January</option>
                        <option value="2">February</option>
                        <option value="3">March</option>
                        <option value="4">April</option>
                        <option value="5">May</option>
                        <option value="6">June</option>
                        <option value="7">July</option>
                        <option value="8">August</option>
                        <option value="9">September</option>
                        <option value="10">October</option>
                        <option value="11">November</option>
                        <option value="12">December</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="graphs">
            <canvas id="lineChart"></canvas>
        </div>
    </div>
    <div class="container-first">
        <div class="graph-header">
            <div>
                <h2>User Booking Frequency</h2>
            </div>
        </div>
        <div class="table-userbooking">
            <div class="tablereport-header">
                <div class="report-cell">User Name</div>
                <div class="report-cell">No. of Bookings</div>
                <div class="report-cell">Last Booking Date</div>
                <div class="report-cell">Most Booked Room</div>
                <div class="report-cell">Total Duration (Hrs)</div>
            </div>
            <div class="tablereport-body">
                @foreach (var user in userBookingFrequencies)
                {
                    <li class="user-row">
                        <div class="user-cell" data-label="User Name">@Html.DisplayFor(modelItem => user.UserName)</div>
                        <div class="user-cell" data-label="No. of Bookings">@Html.DisplayFor(modelItem => user.NoOfBookings)</div>
                        <div class="user-cell" data-label="Last Booking Date">@DateTime.Parse(user.LastBookingDate).ToString("MMM dd, yyyy")</div>
                        <div class="user-cell" data-label="Most Booked Room">@Html.DisplayFor(modelItem => user.MostBookedRoom)</div>
                        <div class="user-cell" data-label="Total Duration(Hrs)">@Html.DisplayFor(modelItem => user.TotalDuration)</div>
                    </li>
                }
            </div>
        </div>
    </div>
    <div class="first-header">
        <h1>Room Usage Summary</h1>
    </div>
    <div class="container-first">
        <div class="table-userbooking">
            <div class="tablereport-header">
                <div class="report-cell">Room Name</div>
                <div class="report-cell">Total Booking</div>
                <div class="report-cell">Peak Day</div>
                <div class="report-cell">Peak Time</div>
                <div class="report-cell">Total Duration (Hrs)</div>
            </div>
            <div class="tablereport-body">
                @foreach (var user in roomUsageSummaries)
                {
                    <li class="user-row">
                        <div class="user-cell" data-label="Room Name">@Html.DisplayFor(modelItem => user.RoomName)</div>
                        <div class="user-cell" data-label="Total No. Bookings">@Html.DisplayFor(modelItem => user.TotalBooking)</div>
                        <div class="user-cell" data-label="Peak Day">@Html.DisplayFor(modelItem => user.PeakDay)</div>
                        <div class="user-cell" data-label="Peak Time">@Html.DisplayFor(modelItem => user.PeakTime)</div>
                        <div class="user-cell" data-label="Total Duration(Hrs)">@Html.DisplayFor(modelItem => user.TotalDuration)</div>
                    </li>
                }
                <div class="detail-table" style="display: none;">
                    <div class="detail-header">
                        <h2 style="text-align: center; font-weight: bold; font-size: 15px;">User Activity Detail</h2>
                    </div>
                    <div class="tablereport-header" style="font-size:15px;">
                        <div class="report-cell">User Name</div>
                        <div class="report-cell">Booking Date</div>
                        <div class="report-cell">Start Time</div>
                        <div class="report-cell">End Time</div>
                        <div class="report-cell">Duration</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
<script src="~/js/reportsAndAnalytics.js"></script>
<script>
    let lineChart;

    document.addEventListener('DOMContentLoaded', function () {
        const currentMonth = new Date().getMonth() + 1; // getMonth() returns 0-11, so add 1
        document.getElementById('monthSelector').value = currentMonth;

        const ctx = document.getElementById('barChart').getContext('2d');
        const ctx2 = document.getElementById('lineChart').getContext('2d');

        const barchart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                datasets: [{
                    label: 'No. of Bookings',
                    data: @Html.Raw(Json.Serialize(barChartData)).$values,
                    borderColor: 'rgb(229, 158, 176)',
                    backgroundColor: 'rgb(229, 158, 176)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: true
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Month'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'No. of Bookings'
                        },
                        beginAtZero: true
                    }
                }
            }
        });

        lineChart = new Chart(ctx2, {
            type: 'line',
            data: {
                labels: generateDaysOfMonth(),
                datasets: [{
                    label: 'No. of Daily Booking',
                    data: @Html.Raw(Json.Serialize(lineChartData)).$values,
                    borderColor: 'rgb(229, 158, 176)',
                    backgroundColor: 'rgb(229, 158, 176)',
                    borderWidth: 2,
                    fill: false,
                    tension: 0.1
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Days'
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Bookings'
                        },
                        beginAtZero: true
                    }
                }
            }
        });

        document.getElementById('monthSelector').addEventListener('change', function () {
            updateLineChart();
        });
    });
    
    function generateDaysOfMonth() {
        const monthSelector = document.getElementById("monthSelector");
        const selectedMonth = parseInt(monthSelector.value, 10);

        const days = [];
        const currentDate = new Date();
        const year = currentDate.getFullYear();

        const daysInMonth = new Date(year, selectedMonth , 0).getDate();

        for (let day = 1; day <= daysInMonth; day++) {
            days.push(day.toString().padStart(2, '0'));
        }

        return days;
    }

    function updateLineChart() {
        const monthSelector = document.getElementById("monthSelector");
        const selectedMonth = monthSelector.value;

        console.log(`Selected month: ${selectedMonth}`);

        fetch(`/MMAnalytics/GetDailyBookings?month=${selectedMonth}`)
            .then(response => {
                console.log('Response received:', response);
                return response.json();
            })
            .then(data => {
                console.log('Data received:', data);

                if (data.$values) {
                    data = data.$values;
                } else {
                    console.error('Unexpected data format:', data);
                    return;
                }
                const daysOfMonth = generateDaysOfMonth();
                lineChart.data.labels = daysOfMonth;
                lineChart.data.datasets[0].data = data;
                lineChart.update();
                
            })
            .catch(error => {
                console.error('Error fetching daily bookings:', error);
            });
    }
</script>





