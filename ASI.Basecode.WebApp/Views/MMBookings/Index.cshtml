@model ASI.Basecode.Services.ServiceModels.BookingViewModel
@{
    ViewData["Title"] = "Bookings";
}

@section styles {
    <link rel="stylesheet" href="~/css/bookingdashboard.css" />
}

<div class="dashboard-header">
    <h1>Bookings</h1>
    <div class="dashboard-header-right" >
        <div class="filter" onclick="displayModal('#filterModal')">
            <i class="fa fa-filter"></i>
        </div>
        @Html.Partial("_SearchBarPartial")
    </div>
</div>

<div class="table-container">
    <div class="user-row header">
        <div class="user-cell">No.</div>
        <div class="user-cell">NAME</div>
        <div class="user-cell">ROOM</div>
        <div class="user-cell">DATE</div>
        <div class="user-cell">TIME</div>
        <div class="user-cell">RECURRENCE</div>
        <div class="user-cell">STATUS</div>
        <div class="user-cell"></div>
    </div>
    <ul class="user-list">
        @foreach (var item in Model.bookingList.Select((value , i) => (value, i)))
        {
            var index = item.i + 1;
            var timeFrom = new DateTime(item.value.TimeFrom.Value.Ticks).ToString("hh:mm tt").ToUpper();
            var timeTo = new DateTime(item.value.TimeTo.Value.Ticks).ToString("hh:mm tt").ToUpper();
            var nameColumn = $"{item.value.modelUser.FirstName} {item.value.modelUser.LastName}<br>{item.value.modelUser.Email}";
            var dateColumn = $"{(item.value.StartDate.HasValue ? item.value.StartDate.Value.ToString("MMM dd, yyyy") : string.Empty)} - {(item.value.EndDate.HasValue ? item.value.EndDate.Value.ToString("MMM dd, yyyy") : string.Empty)}";
            var timeColumn = $"{timeFrom} - {timeTo}";
            <li class="user-row">
                <div class="user-cell" data-label="BOOKING ID">@index</div>
                <div class="user-cell" data-label="NAME">@Html.Raw(nameColumn)</div>
                <div class="user-cell" data-label="ROOM">@Html.DisplayFor(modelItem => item.value.modelRoom.RoomName)</div>
                <div class="user-cell" data-label="DATE">@Html.Raw(dateColumn)</div>
                <div class="user-cell" data-label="TIME">@Html.Raw(timeColumn)</div>
                <div class="user-cell" data-label="RECURRENCE">
                    @if (item.value.Recurrence.Count() == 7)    
                    {
                        <text>Daily</text>
                    }
                    else if (item.value.Recurrence.Count() > 0)
                    {
                        @foreach (var recurrence in item.value.Recurrence)
                        {
                            if(recurrence.DayOfWeek != null)
                            {
                                var dayName = recurrence.DayOfWeek.DayName.Substring(0, 3);
                                @Html.DisplayFor(modelItem => dayName)
                                if (recurrence != item.value.Recurrence.Last())
                                {
                                    <text>, </text>
                                }
                            }
                        }
                    }
                    else
                    {
                        <text>None</text>
                    }
                </div>
                <div class="user-cell" data-label="STATUS"><span class="status">@Html.DisplayFor(modelItem => item.value.BookingStatus)</span></div>
                <div class="user-cell actions">
                    <div class="mr-20 hover-pointer dropdown-trigger" data-id="@item.value.BookingId">
                        <span class="ddicon">&#8942;</span>
                    </div>
                </div>
            </li>
        }

    </ul>
    <div class="dropdown-action">
        <ul>
            <li>
                <form asp-action="ApproveBooking" method="post">
                    <input type="hidden" name="bookingId" />
                    <button type="submit" class="btn-status">
                        <i class="fas fa-circle" style="color: #00FF75; font-size: 10px;"></i> Approve
                    </button>
                </form>
            </li>
            <li>
                <form asp-action="RejectBooking" method="post">
                    <input type="hidden" name="bookingId" />
                    <button type="submit" class="btn-status">
                        <i class="fas fa-circle" style="color: #FF0000; font-size: 10px;"></i> Reject
                    </button>
                </form>
            </li>
            <li>
                <button type="button" class="btn-status" onclick="displayModal('#confirmationBookingDeleteModal'); passId(this, '#confirmDeleteBtn');">
                    <i class="fas fa-trash-alt" style="color: #FF0000; font-size: 10px;"></i> Delete
                </button>
            </li>
        </ul>
    </div>

</div>

@Html.Partial("_BookingsConfirmationModal")
@Html.Partial("_FilterBookingsModal", new ASI.Basecode.Services.ServiceModels.BookingViewModel {roomList = Model.roomList})