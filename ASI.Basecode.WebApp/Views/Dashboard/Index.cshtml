@model IEnumerable<ASI.Basecode.Services.ServiceModels.BookingViewModel>

@{
    ViewData["Title"] = "Dashboard";
}

@section styles {
    <link rel="stylesheet" href="~/css/managerdashboard.css" />
}

<div class="dashboard-header">
    <h1>Dashboard</h1>
</div>

<div class="table-container">
    <div class="table-header">
        Upcoming Bookings
    </div>
    <div class="user-row header">
        <div class="user-cell">Room Name</div>
        <div class="user-cell">Date</div>
        <div class="user-cell">Time From</div>
        <div class="user-cell">Time To</div>
        <div class="user-cell">Recurrence</div>
        <div class="user-cell"></div>
    </div>
    <ul class="user-list">
        @foreach (var item in Model)
        {
            if(item.BookingStatus == "APPROVED")
            {
                <li class="user-row">
                    <div class="user-cell" data-label="Room Name">@Html.DisplayFor(modelItem => item.RoomName)</div>
                    <div class="user-cell" data-label="Date">@Html.DisplayFor(modelItem => item.StartDate)</div>
                    <div class="user-cell" data-label="Time From">@Html.DisplayFor(modelItem => item.TimeFrom)</div>
                    <div class="user-cell" data-label="Time To">@Html.DisplayFor(modelItem => item.TimeTo)</div>
                    <div class="user-cell" data-label="Recurrence">
                        @if (item.Recurrence.Count() > 0)
                        {
                            @foreach (var recurrence in item.Recurrence)
                            {
                                var dayName = recurrence.DayOfWeek.DayName.Substring(0, 3);
                                @Html.DisplayFor(modelItem => dayName)
                                if (recurrence != item.Recurrence.Last())
                                {
                                    <text>, </text>
                                }
                            }
                        }
                        else
                        {
                            <text>None</text>
                        }

                    </div>
                    <div class="user-cell actions">
                        <div class="mr-20 hover-pointer dropdown-trigger" data-id="">
                            <span class="ddicon">&#8942;</span>
                        </div>
                    </div>
                </li>
            }
        }

    </ul>
</div>

<div class="table-container recent">
    <div class="table-header">
        Recent Bookings
    </div>
    <div class="user-row header">
        <div class="user-cell">Room Name</div>
        <div class="user-cell">Date</div>
        <div class="user-cell">Time From</div>
        <div class="user-cell">Time To</div>
        <div class="user-cell">Recurrence</div>
        <div class="user-cell">Status</div>
    </div>
    <ul class="user-list">
        @foreach (var item in Model)
        {
            if (item.BookingStatus == "COMPLETED" || item.BookingStatus == "CANCELLED")
            {
                <li class="user-row">
                    <div class="user-cell" data-label="Room Name">@Html.DisplayFor(modelItem => item.RoomName)</div>
                    <div class="user-cell" data-label="Date">@Html.DisplayFor(modelItem => item.StartDate)</div>
                    <div class="user-cell" data-label="Time From">@Html.DisplayFor(modelItem => item.TimeFrom)</div>
                    <div class="user-cell" data-label="Time To">@Html.DisplayFor(modelItem => item.TimeTo)</div>
                    <div class="user-cell" data-label="Recurrence">
                        @if (item.Recurrence.Count() > 0)
                        {
                            @foreach (var recurrence in item.Recurrence)
                            {
                                var dayName = recurrence.DayOfWeek.DayName.Substring(0, 3);
                                @Html.DisplayFor(modelItem => dayName)
                                if (recurrence != item.Recurrence.Last())
                                {
                                    <text>, </text>
                                }
                            }
                        }
                        else
                        {
                            <text>None</text>
                        }

                    </div>
                    <div class="user-cell" data-label="Status">@Html.DisplayFor(modelItem => item.BookingStatus)</div>
                </li>
            }
        }

    </ul>
</div>

<div class="dropdown-action">
    <ul>
        <li>
            <form asp-action="ActivateUser" method="post">
                <input type="hidden" name="userId" />
                <button type="submit" class="btn-status">
                    <i class="fas fa-circle" style="color: #00FF75; font-size: 10px;"></i> Activate
                </button>
            </form>
        </li>
        <li>
            <form asp-action="RestrictUser" method="post">
                <input type="hidden" name="userId" />
                <button type="submit" class="btn-status">
                    <i class="fas fa-circle" style="color: #FF0000; font-size: 10px;"></i> Restrict
                </button>
            </form>
        </li>
        <li>
            <button type="button" class="btn-status" onclick="displayModal('#editUserModal'); getUserDetails(this, '#editUserModal', 'GetUserDetails', 'AAUser');">
                <i class="fas fa-edit" style=" font-size: 10px;"></i> Edit
            </button>
        </li>
        <li>
            <button type="button" class="btn-status" onclick="displayModal('#confirmationDeleteModal'); passUserId(this, '#confirmDeleteBtn');">
                <i class="fas fa-trash-alt" style="color: #FF0000; font-size: 10px;"></i> Delete
            </button>
        </li>
    </ul>
</div>
